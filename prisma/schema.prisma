// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

model students {
  id               Int                @id @default(autoincrement())
  code             String             @unique @db.VarChar(8)
  first_name       String             @db.VarChar(100)
  last_name        String             @db.VarChar(100)
  gender           Gender
  birth_date       DateTime           @db.Timestamp()
  email            String             @db.VarChar(100)
  phone_number     String             @db.VarChar(10)
  bio              String?
  created_at       DateTime           @default(now()) @db.Date
  updated_at       DateTime           @updatedAt
  students_courses students_courses[]

  @@index([code, first_name])
}

model teachers {
  id           Int       @id @default(autoincrement())
  code         String    @unique @db.VarChar(8)
  first_name   String    @db.VarChar(100)
  last_name    String    @db.VarChar(100)
  gender       Gender
  birth_date   DateTime  @db.Timestamp()
  email        String?   @db.VarChar(100)
  phone_number String?   @db.VarChar(10)
  bio          String?
  created_at   DateTime  @default(now()) @db.Date
  updated_at   DateTime  @updatedAt
  courses      courses[]

  @@index([code, first_name])
}

model courses {
  id               Int                @id @default(autoincrement())
  code             String             @unique @db.VarChar(6)
  name             String             @db.VarChar(150)
  level            Int                @default(0)
  point            Int                @default(0)
  created_at       DateTime           @default(now()) @db.Date
  updated_at       DateTime           @updatedAt
  teacher          teachers           @relation(fields: [teacher_id], references: [id])
  teacher_id       Int
  course_category  course_categories  @relation(fields: [category_id], references: [id])
  category_id      Int
  students_courses students_courses[]

  @@index([code, name])
}

model students_courses {
  id               Int       @id @default(autoincrement())
  student          students  @relation(fields: [student_id], references: [id])
  student_id       Int
  course           courses   @relation(fields: [course_id], references: [id])
  course_id        Int
  pass             Boolean   @default(false)
  remove_course_at DateTime?
  created_at       DateTime  @default(now()) @db.Date
  updated_at       DateTime  @updatedAt

  @@index([student_id, course_id])
}

model course_categories {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  short_name String    @unique
  created_at DateTime  @default(now()) @db.Date
  updated_at DateTime  @updatedAt
  courses    courses[]

  @@index([name, short_name])
}

model runnumber {
  id             Int    @id
  name           String
  current_number Int
}
